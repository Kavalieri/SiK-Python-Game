---
description: Proceso de refactorizaci√≥n sistem√°tica para archivos >150 l√≠neas.
globs:
- src/**/*.py
alwaysApply: true
---
- üéØ OBJETIVO CR√çTICO: Ning√∫n archivo >150 l√≠neas
- üìä ARCHIVOS IDENTIFICADOS PARA REFACTORIZACI√ìN:
  - src/entities/entity.py (>300 l√≠neas) - ALTA PRIORIDAD
  - src/ui/menu_factory.py (>300 l√≠neas) - ALTA PRIORIDAD
  - src/ui/menu_callbacks.py (>300 l√≠neas) - ALTA PRIORIDAD
  - src/utils/world_generator.py (>300 l√≠neas) - MEDIA PRIORIDAD
  - src/utils/animation_manager.py (>280 l√≠neas) - MEDIA PRIORIDAD

- üîß ESTRATEGIA DE DIVISI√ìN:
  1. Identificar responsabilidades separadas dentro del archivo
  2. Crear subm√≥dulos espec√≠ficos por responsabilidad
  3. Mantener API p√∫blica intacta para evitar breaking changes
  4. Crear tests unitarios para cada subm√≥dulo
  5. Verificar funcionalidad completa despu√©s de divisi√≥n

- ‚úÖ PROCESO SEGURO:
  1. Crear backup del archivo original
  2. Ejecutar tests antes de refactorizaci√≥n
  3. Dividir archivo manteniendo funcionalidad
  4. Ejecutar tests despu√©s de cada divisi√≥n
  5. Actualizar imports en archivos dependientes
  6. Verificar ejecuci√≥n completa del juego
  7. Commit at√≥mico por cada archivo refactorizado

- üö® REGLAS CR√çTICAS:
  - NO cambiar comportamiento p√∫blico de clases/funciones
  - Mantener backward compatibility
  - Tests deben pasar despu√©s de cada refactorizaci√≥n
  - Documentar cambios en CHANGELOG.md
  - Actualizar imports en archivos dependientes

@INSTRUCCIONES_DESARROLLO.md
